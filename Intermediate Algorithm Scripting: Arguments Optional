/Intermediate Algorithm Scripting: Arguments Optional
Create a function that sums two arguments together. If only one argument is provided, then return a function that expects one argument and returns the sum.

For example, addTogether(2, 3) should return 5, and addTogether(2) should return a function.

Calling this returned function with a single argument will then return the sum:

var sumTwoAnd = addTogether(2);

sumTwoAnd(3) returns 5.

If either argument isn't a valid number, return undefined.

Remember to use Read-Search-Ask if you get stuck. Try to pair program. Write your own code.**/


function addTogether() {
  let args = Array.prototype.slice.call(arguments);

  let check = (x)=>{
    return typeof x === "number";
  }

  if(args.length === 2){
    if(check(args[0]) && check(args[1]) === true){
      return args[0] + args[1];
    }else{
      return undefined;
    }
  }else{
    if(check(args[0]) === true){
      return function(y){
        if(check(y) === true){
          return args[0] + y;
        }
      }
    }else{
        return undefined;
      }
  }

}


addTogether(2,3);


/* ---------------------------- A slightly shorter way ---------------------------- */

function addTogether() {
  let args = Array.prototype.slice.call(arguments);

  let check = (x)=>{
    return typeof x === "number";
  }

  if(args.length === 2){
    if(check(args[0]) && check(args[1]) === true){
      return args[0] + args[1];
    }
  }else{
    if(check(args[0]) === true){
      return function(y){
        if(check(y) === true){
          return args[0] + y;
        }
      }
    }
  }

  return undefined;

}


addTogether(2,3);
